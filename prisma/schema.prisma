generator client {
  provider = "prisma-client-js"
  previewFeatures = ["clientExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model airline {
  id                     String                   @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  description            String?                  @db.VarChar(255)
  image                  String?                  @db.VarChar(255)
  name                   String                   @db.VarChar(255)
  created_at             DateTime                 @default(now()) @db.Timestamp(6)
  updated_at             DateTime                 @default(now()) @db.Timestamp(6)
  user_id                String                   @db.Uuid
  tenant_id              String                   @db.VarChar(255)
  user                   user                     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  luggage_delivery_order luggage_delivery_order[]
}

model luggage_delivery_order {
  id         String   @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  status     String   @db.VarChar(255)
  user_id    String?  @db.Uuid
  porter_id  String?  @db.Uuid
  airline_id String?  @db.Uuid
  created_at DateTime @default(now()) @db.Timestamp(6)
  updated_at DateTime @default(now()) @db.Timestamp(6)
  airline    airline? @relation(fields: [airline_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  porter     porter?  @relation(fields: [porter_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user       user?    @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model porter {
  id                     String                   @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  name                   String                   @db.VarChar(255)
  user_id                String?                  @db.Uuid
  created_at             DateTime                 @default(now()) @db.Timestamp(6)
  updated_at             DateTime                 @default(now()) @db.Timestamp(6)
  luggage_delivery_order luggage_delivery_order[]
  user                   user?                    @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model user {
  id                     String                   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email                  String                   @unique @db.VarChar(255)
  firstName              String?                  @db.VarChar(255)
  lastName               String?                  @db.VarChar(255)
  roq_user_id            String                   @db.VarChar(255)
  tenant_id              String                   @db.VarChar(255)
  created_at             DateTime                 @default(now()) @db.Timestamp(6)
  updated_at             DateTime                 @default(now()) @db.Timestamp(6)
  airline                airline[]
  luggage_delivery_order luggage_delivery_order[]
  porter                 porter[]
}
